name: Build For Linux

on:
  workflow_dispatch:
  workflow_call:

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        float_precision: [single, double]
        target: [linux]
        arch: [x86_64]
        build_type: [release, debug]
        include:
          # Build type to cmake keyword.
          - build_type: release
            cmake_build_type_keyword: Release

          - build_type: debug
            cmake_build_type_keyword: RelWithDebInfo

          # Define host for each target.
          - os: ubuntu-latest
            target: linux

          # Define toolchain data.
          - target: linux
            arch: x86_64
            dependencies: ""
            cxxflags: -m64

    steps:
      - name: Check out code
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Setup ninja
        uses: seanmiddleditch/gha-setup-ninja@master

      - name: Prepare Vulkan SDK
        uses: humbletim/setup-vulkan-sdk@v1.2.0
        with:
          vulkan-query-version: latest
          vulkan-components: Vulkan-Headers, Vulkan-Loader
          vulkan-use-cache: true

      # Setup CMake
      - name: Set up CMake for Linux
        shell: bash
        run: |
          if [ ! -d "${{ github.workspace }}/build" ]; then
            mkdir "${{ github.workspace }}/build"
          fi
          cd "${{ github.workspace }}/build"
          cmake "${{ github.workspace }}" -G Ninja -DCMAKE_BUILD_TYPE="${{ matrix.cmake_build_type_keyword }}" \
            -DCMAKE_CXX_FLAGS="${{ matrix.cxxflags }}" \
            -DIREE_ENABLE_WERROR_FLAG=OFF \
            -DFLOAT_PRECISION=${{ matrix.float_precision }} \
            -DCOPY_LIBS_TO_SAMPLE=ON \
            -DIREE_BUILD_TESTS=OFF

      - name: Build project
        shell: bash
        run: ninja -C "${{ github.workspace }}/build"

      - name: Show build files
        shell: bash
        working-directory: build
        run: ls -lR

      - name: Copy Files
        shell: bash
        run: |
          cp -rf ${{ github.workspace }}/miscellaneous/iree-gd.gdextension ${{ github.workspace }}/sample/addons/iree-gd/iree-gd.gdextension
          cp -rf ${{ github.workspace }}/LICENSE ${{ github.workspace }}/sample/addons/iree-gd/LICENSE
          cp -rf ${{ github.workspace }}/README.md ${{ github.workspace }}/sample/addons/iree-gd/README.md

      - name: Export libraries
        uses: actions/upload-artifact@v4
        with:
          name: iree-gd-${{ matrix.float_precision }}-${{ matrix.target }}-${{ matrix.arch }}-${{ matrix.build_type }}
          path: |
            ${{ github.workspace }}/sample/addons/iree-gd/*.so
            ${{ github.workspace }}/sample/addons/iree-gd/iree-gd.gdextension
            ${{ github.workspace }}/sample/addons/iree-gd/LICENSE
            ${{ github.workspace }}/sample/addons/iree-gd/README.md
          if-no-files-found: error

      - name: Export samples
        uses: actions/upload-artifact@v4
        with:
          name: sample-iree-gd-${{ matrix.float_precision }}-${{ matrix.target }}-${{ matrix.arch }}-${{ matrix.build_type }}
          path: |
            ${{ github.workspace }}/sample
          if-no-files-found: error
