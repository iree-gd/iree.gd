name: Build For Mac OS

on:
  workflow_dispatch:
  workflow_call:
    secrets:
      APPLE_CERT_BASE64:
        required: true
      APPLE_CERT_PASSWORD:
        required: true
      APPLE_DEV_PASSWORD:
        required: true
      APPLE_DEV_ID:
        required: true
      APPLE_DEV_TEAM_ID:
        required: true
      APPLE_DEV_APP_ID:
        required: true

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        float_precision: [single, double]
        target: [macos]
        arch: [universal]
        build_type: [release, debug]
        include:
          # Build type to cmake keyword.
          - build_type: release
            cmake_build_type_keyword: Release

          - build_type: debug
            cmake_build_type_keyword: RelWithDebInfo

          - os: macos-latest
            target: macos

    steps:
      - name: Check out code
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1.6.0
        with:
          xcode-version: latest

      - name: Setup CMake and Ninja
        uses: lukka/get-cmake@latest

      - name: Set up CMake for Host tools
        shell: bash
        run: |
          if [ ! -d "${{ github.workspace }}/host-tools-build" ]; then
            mkdir "${{ github.workspace }}/host-tools-build"
          fi
          cd "${{ github.workspace }}/host-tools-build"
          cmake "${{ github.workspace }}/thirdparty/iree" -G Ninja -DCMAKE_BUILD_TYPE=RelWithDebInfo \
            -DCMAKE_INSTALL_PREFIX="${{ github.workspace }}/host-tools-build/install" \
            -DHAVE_STD_REGEX=ON -DRUN_HAVE_STD_REGEX=ON \
            -DIREE_ENABLE_WERROR_FLAG=OFF \
            -DIREE_BUILD_COMPILER=OFF \
            -DIREE_BUILD_TESTS=OFF

      - name: Build Host tools
        shell: bash
        run: cmake --build ${{ github.workspace }}/host-tools-build --target install

      - name: Set up CMake for MacOS x86_64
        shell: bash
        run: |
          if [ ! -d "${{ github.workspace }}/build_x86_64" ]; then
            mkdir "${{ github.workspace }}/build_x86_64"
          fi
          cd "${{ github.workspace }}/build_x86_64"
          cmake "${{ github.workspace }}" -G Ninja -DCMAKE_BUILD_TYPE=${{ matrix.cmake_build_type_keyword }} \
            -DIREE_HOST_BIN_DIR="${{ github.workspace }}/host-tools-build/install/bin" \
            -DCMAKE_OSX_ARCHITECTURES="x86_64" \
            -DCMAKE_OSX_SYSROOT=$(xcodebuild -version -sdk macosx Path) \
            -DCMAKE_OSX_DEPLOYMENT_TARGET=11.0 \
            -DIREE_ENABLE_WERROR_FLAG=OFF \
            -DIREE_BUILD_COMPILER=OFF \
            -DIREE_BUILD_SAMPLES=OFF \
            -DIREE_BUILD_TESTS=OFF \
            -DHAVE_STD_REGEX=ON \
            -DFLOAT_PRECISION=${{ matrix.float_precision }} \
            -DCOPY_LIBS_TO_SAMPLE=OFF

      - name: Build project x86_64
        shell: bash
        run: cmake --build "${{ github.workspace }}/build_x86_64"

      - name: Set up CMake for MacOS arm64
        shell: bash
        run: |
          if [ ! -d "${{ github.workspace }}/build_arm64" ]; then
            mkdir "${{ github.workspace }}/build_arm64"
          fi
          cd "${{ github.workspace }}/build_arm64"
          cmake "${{ github.workspace }}" -G Ninja -DCMAKE_BUILD_TYPE=${{ matrix.cmake_build_type_keyword }} \
            -DIREE_HOST_BIN_DIR="${{ github.workspace }}/host-tools-build/install/bin" \
            -DCMAKE_OSX_ARCHITECTURES="arm64" \
            -DCMAKE_OSX_SYSROOT=$(xcodebuild -version -sdk macosx Path) \
            -DCMAKE_OSX_DEPLOYMENT_TARGET=11.0 \
            -DIREE_ENABLE_WERROR_FLAG=OFF \
            -DIREE_BUILD_COMPILER=OFF \
            -DIREE_BUILD_SAMPLES=OFF \
            -DIREE_BUILD_TESTS=OFF \
            -DHAVE_STD_REGEX=ON \
            -DFLOAT_PRECISION=${{ matrix.float_precision }} \
            -DCOPY_LIBS_TO_SAMPLE=OFF

      - name: Build project arm64
        shell: bash
        run: cmake --build "${{ github.workspace }}/build_arm64"

      - name: Show build files
        shell: bash
        working-directory: "${{ github.workspace }}/build_arm64"
        run: ls -lR

      - name: Show build files
        shell: bash
        working-directory: "${{ github.workspace }}/build_x86_64"
        run: ls -lR

      - name: Make Universal lib
        shell: bash
        run: lipo -create -output "${{ github.workspace }}/sample/addons/iree-gd/libiree-gd.darwin.${{ matrix.build_type }}.${{ matrix.float_precision }}.framework/libiree-gd.darwin.${{ matrix.build_type }}.${{ matrix.float_precision }}.dylib" "${{ github.workspace }}/build_arm64/lib/libiree-gd.darwin.${{ matrix.build_type }}.${{ matrix.float_precision }}.arm64.dylib" "${{ github.workspace }}/build_x86_64/lib/libiree-gd.darwin.${{ matrix.build_type }}.${{ matrix.float_precision }}.x86_64.dylib"

      - name: Mac Sign
        uses: ughuuu/godot-cpp-template/.github/actions/sign@add-more-stuff/options-to-build
        with:
          FRAMEWORK_PATH: "${{ github.workspace }}/sample/addons/iree-gd/libiree-gd.darwin.${{ matrix.build_type }}.${{ matrix.float_precision }}.framework"
          SIGN_FLAGS: "--deep"
          APPLE_CERT_BASE64: ${{ secrets.APPLE_CERT_BASE64 }}
          APPLE_CERT_PASSWORD: ${{ secrets.APPLE_CERT_PASSWORD }}
          APPLE_DEV_PASSWORD: ${{ secrets.APPLE_DEV_PASSWORD }}
          APPLE_DEV_ID: ${{ secrets.APPLE_DEV_ID }}
          APPLE_DEV_TEAM_ID: ${{ secrets.APPLE_DEV_TEAM_ID }}
          APPLE_DEV_APP_ID: ${{ secrets.APPLE_DEV_APP_ID }}
        if: github.ref == 'refs/heads/main' || github.event_name == 'pull_request'

      - name: Copy Files
        shell: bash
        run: |
          cp -rf ${{ github.workspace }}/miscellaneous/iree-gd.gdextension ${{ github.workspace }}/sample/addons/iree-gd/iree-gd.gdextension
          cp -rf ${{ github.workspace }}/LICENSE ${{ github.workspace }}/sample/addons/iree-gd/LICENSE
          cp -rf ${{ github.workspace }}/README.md ${{ github.workspace }}/sample/addons/iree-gd/README.md

      - name: Export libraries
        uses: actions/upload-artifact@v3
        with:
          name: iree-gd-${{ matrix.float_precision }}-${{ matrix.target }}-${{ matrix.arch }}-${{ matrix.build_type }}
          path: |
            ${{ github.workspace }}/sample/addons/iree-gd/*.dylib
            ${{ github.workspace }}/sample/addons/iree-gd/*.plist
            ${{ github.workspace }}/sample/addons/iree-gd/iree-gd.gdextension
            ${{ github.workspace }}/sample/addons/iree-gd/LICENSE
            ${{ github.workspace }}/sample/addons/iree-gd/README.md
            ${{ github.workspace }}/sample/addons/iree-gd/CodeResources
          if-no-files-found: error

      - name: Export samples
        uses: actions/upload-artifact@v4
        with:
          name: sample-iree-gd-${{ matrix.float_precision }}-${{ matrix.target }}-${{ matrix.arch }}-${{ matrix.build_type }}
          path: |
            ${{ github.workspace }}/sample
          if-no-files-found: error
