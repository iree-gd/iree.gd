//===--------------------------------------------------------------------------------------------------------------===//
// @module : version 0
//===--------------------------------------------------------------------------------------------------------------===//

Required Types:
  [  0] i32
  [  1] i64
  [  2] !hal.allocator
  [  3] !hal.buffer
  [  4] !hal.buffer_view
  [  5] !hal.command_buffer
  [  6] !hal.device
  [  7] !hal.executable
  [  8] !hal.fence
  [  9] !hal.file
  [ 10] !vm.buffer

Module Dependencies:
  hal, version >= 5, required

Imported Functions:
  [  0] hal.ex.file.from_memory(!vm.ref<?>, i64, i32, !vm.ref<?>, i64, i64, i32) -> (!vm.ref<?>)
  [  1] hal.allocator.allocate(!vm.ref<?>, i64, i32, i32, i64) -> (!vm.ref<?>)
  [  2] hal.allocator.import(!vm.ref<?>, i32, i64, i32, i32, !vm.ref<?>, i64, i64) -> (!vm.ref<?>)
  [  3] hal.buffer.assert(!vm.ref<?>, !vm.ref<?>, !vm.ref<?>, i64, i32, i32) -> ()
  [  4] hal.buffer_view.create(!vm.ref<?>, i64, i64, i32, i32, tuple<i64>...) -> (!vm.ref<?>)
  [  5] hal.buffer_view.assert(!vm.ref<?>, !vm.ref<?>, i32, i32, tuple<i64>...) -> ()
  [  6] hal.buffer_view.buffer(!vm.ref<?>) -> (!vm.ref<?>)
  [  7] hal.command_buffer.create(!vm.ref<?>, i32, i32, i64, i32) -> (!vm.ref<?>)
  [  8] hal.command_buffer.finalize(!vm.ref<?>) -> ()
  [  9] hal.command_buffer.execution_barrier(!vm.ref<?>, i32, i32, i32) -> ()
  [ 10] hal.command_buffer.fill_buffer(!vm.ref<?>, !vm.ref<?>, i64, i64, i32, i32, i32) -> ()
  [ 11] hal.command_buffer.dispatch(!vm.ref<?>, !vm.ref<?>, i32, i32, i32, i32, i64, tuple<i32>..., tuple<i32, i32, !vm.ref<?>, i64, i64>...) -> ()
  [ 12] hal.device.allocator(!vm.ref<?>) -> (!vm.ref<?>)
  [ 13] hal.device.query.i64(!vm.ref<?>, !vm.ref<?>, !vm.ref<?>) -> (i32, i64)
  [ 14] hal.device.queue.alloca(!vm.ref<?>, i64, !vm.ref<?>, !vm.ref<?>, i32, i32, i32, i64) -> (!vm.ref<?>)
  [ 15] hal.device.queue.dealloca(!vm.ref<?>, i64, !vm.ref<?>, !vm.ref<?>, !vm.ref<?>) -> ()
  [ 16] hal.device.queue.read(!vm.ref<?>, i64, !vm.ref<?>, !vm.ref<?>, !vm.ref<?>, i64, !vm.ref<?>, i64, i64, i32) -> ()
  [ 17] hal.device.queue.execute.indirect(!vm.ref<?>, i64, !vm.ref<?>, !vm.ref<?>, !vm.ref<?>, tuple<!vm.ref<?>, i64, i64>...) -> ()
  [ 18] hal.devices.count() -> (i32)
  [ 19] hal.devices.get(i32) -> (!vm.ref<?>)
  [ 20] hal.executable.create(!vm.ref<?>, !vm.ref<?>, !vm.ref<?>, !vm.ref<?>) -> (!vm.ref<?>)
  [ 21] hal.fence.create(!vm.ref<?>, i32) -> (!vm.ref<?>)
  [ 22] hal.fence.join(tuple<!vm.ref<?>>...) -> (!vm.ref<?>)
  [ 23] hal.fence.await(i32, tuple<!vm.ref<?>>...) -> (i32)

Exported Functions:
  [  0] main(!vm.ref<?>) -> (!vm.ref<?>, !vm.ref<?>, !vm.ref<?>, !vm.ref<?>, !vm.ref<?>)
        iree.abi.declaration: sync func @main(%input0: tensor<1x256x256x3xf32> {ml_program.identifier = "input_1"}) -> (%output0: tensor<1x195xf32> {ml_program.identifier = "Identity"}, %output1: tensor<1x1xf32> {ml_program.identifier = "Identity_1"}, %output2: tensor<1x256x256x1xf32> {ml_program.identifier = "Identity_2"}, %output3: tensor<1x64x64x39xf32> {ml_program.identifier = "Identity_3"}, %output4: tensor<1x117xf32> {ml_program.identifier = "Identity_4"})
  [  1] __init() -> ()

//===--------------------------------------------------------------------------------------------------------------===//
// Sections
//===--------------------------------------------------------------------------------------------------------------===//

Module State:
  0 bytes, 97 refs, ~1552 bytes total

FlatBuffer: 88316 bytes
  Bytecode: 35584 bytes
  .rodata[  0] embedded       13 bytes `hal.device.id`
  .rodata[  1] embedded        6 bytes `vulkan`
  .rodata[  2] embedded       21 bytes `hal.executable.format`
  .rodata[  3] embedded       15 bytes `vulkan-spirv-fb`
  .rodata[  4] external     1692 bytes (offset 96 / 60h to 6FCh)
  .rodata[  5] external     7200 bytes (offset 1888 / 760h to 2380h)
  .rodata[  6] external     1660 bytes (offset 9184 / 23E0h to 2A5Ch)
  .rodata[  7] external     5812 bytes (offset 10944 / 2AC0h to 4174h)
  .rodata[  8] external    10568 bytes (offset 16848 / 41D0h to 6B18h)
  .rodata[  9] external    14632 bytes (offset 27504 / 6B70h to A498h)
  .rodata[ 10] external     1548 bytes (offset 42224 / A4F0h to AAFCh)
  .rodata[ 11] external     7360 bytes (offset 43872 / AB60h to C820h)
  .rodata[ 12] external     1436 bytes (offset 51328 / C880h to CE1Ch)
  .rodata[ 13] external     8368 bytes (offset 52864 / CE80h to EF30h)
  .rodata[ 14] external     3904 bytes (offset 61328 / EF90h to FED0h)
  .rodata[ 15] external    13404 bytes (offset 65328 / FF30h to 1338Ch)
  .rodata[ 16] external     1676 bytes (offset 78832 / 133F0h to 13A7Ch)
  .rodata[ 17] external     6784 bytes (offset 80608 / 13AE0h to 15560h)
  .rodata[ 18] external     4000 bytes (offset 87488 / 155C0h to 16560h)
  .rodata[ 19] external     1640 bytes (offset 91584 / 165C0h to 16C28h)
  .rodata[ 20] external     5812 bytes (offset 93328 / 16C90h to 18344h)
  .rodata[ 21] external     1676 bytes (offset 99232 / 183A0h to 18A2Ch)
  .rodata[ 22] external     6816 bytes (offset 101008 / 18A90h to 1A530h)
  .rodata[ 23] external    10956 bytes (offset 107920 / 1A590h to 1D05Ch)
  .rodata[ 24] external    13388 bytes (offset 118976 / 1D0C0h to 2050Ch)
  .rodata[ 25] external     1564 bytes (offset 132464 / 20570h to 20B8Ch)
  .rodata[ 26] external     6916 bytes (offset 134128 / 20BF0h to 226F4h)
  .rodata[ 27] external    12492 bytes (offset 141136 / 22750h to 2581Ch)
  .rodata[ 28] external     1564 bytes (offset 153728 / 25880h to 25E9Ch)
  .rodata[ 29] external     5800 bytes (offset 155392 / 25F00h to 275A8h)
  .rodata[ 30] external     1564 bytes (offset 161296 / 27610h to 27C2Ch)
  .rodata[ 31] external     6800 bytes (offset 162960 / 27C90h to 29720h)
  .rodata[ 32] external    11612 bytes (offset 169856 / 29780h to 2C4DCh)
  .rodata[ 33] external    13388 bytes (offset 181568 / 2C540h to 2F98Ch)
  .rodata[ 34] external     2160 bytes (offset 195056 / 2F9F0h to 30260h)
  .rodata[ 35] external     7616 bytes (offset 197312 / 302C0h to 32080h)
  .rodata[ 36] external    13148 bytes (offset 205024 / 320E0h to 3543Ch)
  .rodata[ 37] external    13132 bytes (offset 218272 / 354A0h to 387ECh)
  .rodata[ 38] external     1564 bytes (offset 231504 / 38850h to 38E6Ch)
  .rodata[ 39] external     6884 bytes (offset 233168 / 38ED0h to 3A9B4h)
  .rodata[ 40] external     3028 bytes (offset 240144 / 3AA10h to 3B5E4h)
  .rodata[ 41] external    13216 bytes (offset 243264 / 3B640h to 3E9E0h)
  .rodata[ 42] external     1676 bytes (offset 256576 / 3EA40h to 3F0CCh)
  .rodata[ 43] external     7336 bytes (offset 258352 / 3F130h to 40DD8h)
  .rodata[ 44] external     3948 bytes (offset 265792 / 40E40h to 41DACh)
  .rodata[ 45] external     1676 bytes (offset 269840 / 41E10h to 4249Ch)
  .rodata[ 46] external     4968 bytes (offset 271616 / 42500h to 43868h)
  .rodata[ 47] external     6632 bytes (offset 276688 / 438D0h to 452B8h)
  .rodata[ 48] external     6132 bytes (offset 283424 / 45320h to 46B14h)
  .rodata[ 49] external    11120 bytes (offset 289648 / 46B70h to 496E0h)
  .rodata[ 50] external     2068 bytes (offset 300864 / 49740h to 49F54h)
  .rodata[ 51] external     5656 bytes (offset 303024 / 49FB0h to 4B5C8h)
  .rodata[ 52] external     7356 bytes (offset 308784 / 4B630h to 4D2ECh)
  .rodata[ 53] external     2104 bytes (offset 316240 / 4D350h to 4DB88h)
  .rodata[ 54] external     5776 bytes (offset 318448 / 4DBF0h to 4F280h)
  .rodata[ 55] external     8688 bytes (offset 324320 / 4F2E0h to 514D0h)
  .rodata[ 56] external    52348 bytes (offset 333104 / 51530h to 5E1ACh)
  .rodata[ 57] external    52792 bytes (offset 385552 / 5E210h to 6B048h)
  .rodata[ 58] external    52084 bytes (offset 438448 / 6B0B0h to 77C24h)
  .rodata[ 59] external     1676 bytes (offset 490624 / 77C80h to 7830Ch)
  .rodata[ 60] external     8076 bytes (offset 492400 / 78370h to 7A2FCh)
  .rodata[ 61] external     3672 bytes (offset 500576 / 7A360h to 7B1B8h)
  .rodata[ 62] external     6152 bytes (offset 504352 / 7B220h to 7CA28h)
  .rodata[ 63] external     2160 bytes (offset 510608 / 7CA90h to 7D300h)
  .rodata[ 64] external     5320 bytes (offset 512864 / 7D360h to 7E828h)
  .rodata[ 65] external     6196 bytes (offset 518288 / 7E890h to 800C4h)
  .rodata[ 66] external     5268 bytes (offset 524576 / 80120h to 815B4h)
  .rodata[ 67] external     6196 bytes (offset 529936 / 81610h to 82E44h)
  .rodata[ 68] external     3340 bytes (offset 536224 / 82EA0h to 83BACh)
  .rodata[ 69] external     5320 bytes (offset 539664 / 83C10h to 850D8h)
  .rodata[ 70] external     8568 bytes (offset 545088 / 85140h to 872B8h)
  .rodata[ 71] external     2160 bytes (offset 553760 / 87320h to 87B90h)
  .rodata[ 72] external     5320 bytes (offset 556016 / 87BF0h to 890B8h)
  .rodata[ 73] external     6196 bytes (offset 561440 / 89120h to 8A954h)
  .rodata[ 74] external     2560 bytes (offset 567728 / 8A9B0h to 8B3B0h)
  .rodata[ 75] external     3548 bytes (offset 570384 / 8B410h to 8C1ECh)
  .rodata[ 76] external    10396 bytes (offset 574032 / 8C250h to 8EAECh)
  .rodata[ 77] external     1616 bytes (offset 584528 / 8EB50h to 8F1A0h)
  .rodata[ 78] external     4636 bytes (offset 586240 / 8F200h to 9041Ch)
  .rodata[ 79] external     4476 bytes (offset 590976 / 90480h to 915FCh)
  .rodata[ 80] external     5148 bytes (offset 595552 / 91660h to 92A7Ch)
  .rodata[ 81] external     2272 bytes (offset 600800 / 92AE0h to 933C0h)
  .rodata[ 82] external     5496 bytes (offset 603168 / 93420h to 94998h)
  .rodata[ 83] external     6292 bytes (offset 608768 / 94A00h to 96294h)
  .rodata[ 84] external     1616 bytes (offset 615152 / 962F0h to 96940h)
  .rodata[ 85] external     3032 bytes (offset 616864 / 969A0h to 97578h)
  .rodata[ 86] external     4460 bytes (offset 620000 / 975E0h to 9874Ch)
  .rodata[ 87] external     3028 bytes (offset 624560 / 987B0h to 99384h)
  .rodata[ 88] external     2160 bytes (offset 627680 / 993E0h to 99C50h)
  .rodata[ 89] external     3908 bytes (offset 629936 / 99CB0h to 9ABF4h)
  .rodata[ 90] external     6292 bytes (offset 633936 / 9AC50h to 9C4E4h)
  .rodata[ 91] external     2832 bytes (offset 640320 / 9C540h to 9D050h)
  .rodata[ 92] external     1748 bytes (offset 643248 / 9D0B0h to 9D784h)
  .rodata[ 93] external     2888 bytes (offset 645088 / 9D7E0h to 9E328h)
  .rodata[ 94] external     1748 bytes (offset 648080 / 9E390h to 9EA64h)
  .rodata[ 95] external     1868 bytes (offset 649920 / 9EAC0h to 9F20Ch)
  .rodata[ 96] external     2028 bytes (offset 651888 / 9F270h to 9FA5Ch)
  .rodata[ 97] external 12673728 bytes (offset 654016 / 9FAC0h to CB5D80h)
  .rodata[ 98] embedded        6 bytes `input0`
  .rodata[ 99] embedded        6 bytes `tensor`

External .rodata: ~13318536 bytes

//===--------------------------------------------------------------------------------------------------------------===//
// Bytecode : version 0
//===--------------------------------------------------------------------------------------------------------------===//

  # | Offset   |   Length | Blocks | i32 # | ref # | Requirements | Aliases
----+----------+----------+--------+-------+-------+--------------+-----------------------------------------------------
  0 | 00000000 |    16382 |      1 |   240 |    96 |              | 
  1 | 00004000 |      897 |      3 |    48 |     7 |              | main
  2 | 00004388 |    18296 |    196 |    24 |    98 |              | __init

//===--------------------------------------------------------------------------------------------------------------===//
// Debug Information
//===--------------------------------------------------------------------------------------------------------------===//
// NOTE: debug databases are large and should be stripped in deployed artifacts.

Locations: 458

